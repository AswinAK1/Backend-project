<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create New Product</title>
  <link rel="stylesheet" href="/css/createProduct.css">
  <style>


    .error {
      color: red;
      font-size: 12px;
      display: none;
    }
    select {
    width: 100%;
    padding: 15px 20px;
    font-size: 16px;
    border-radius: 5px;
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    box-sizing: border-box;
}

  </style>
</head>
<body>
  <div class="container">
    <h1>Create New Product</h1>
    <form action="/admin/createProduct" method="POST" enctype="multipart/form-data" onsubmit="return productValidation()" novalidate>
      <div class="form-group">
        <label for="name">Product Name</label>
        <input type="text" id="name" name="productName">
        <div id="name-err" class="error"></div>
      </div>

      <div class="form-group">
        <label for="description">Description</label>
        <textarea id="description" name="description" rows="4"></textarea>
        <div id="description-err" class="error"></div>
      </div>
      
      <div class="form-group">
        <label for="price">Price</label>
        <input type="number" id="price" name="price" step="0.01">
        <div id="price-err" class="error"></div>
      </div>
      
      
      <div>
        <label for="category">Category:</label>
        <select name="category" id="category">
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>
    
      <div>
        <label for="subcategory">Subcategory:</label>
        <select name="subcategory" id="subcategory">
          <% categories.forEach(category => { %>
            <% category.subcategories.forEach(subcategory => { %>
              <option value="<%= subcategory._id %>" data-category="<%= category._id %>"><%= subcategory.name %></option>
            <% }) %>
          <% }) %>
        </select>
      </div>
    

      <div class="form-group">
        <label for="stock">Stock</label>
        <input type="number" id="stock" name="stock">
        <div id="stock-err" class="error"></div>
      </div>

      <div class="form-group">
        <label for="image">Product Image</label>
        <input type="file" id="image" name="imageUrl" accept="image/*" required>
        <div id="image-err" class="error"></div>
      </div>
      
      <button type="submit">Add Product</button>
    </form>
  </div>

  <script>

     // Script to filter subcategories based on selected category
  // document.getElementById("category").addEventListener("change", function() {
  //   const selectedCategory = this.value;
  //   const subcategorySelect = document.getElementById("subcategory");
    
  //   for (const option of subcategorySelect.options) {
  //     option.style.display = option.getAttribute("data-category") === selectedCategory ? "block" : "none";
  //   }
  //   subcategorySelect.value = ""; // Reset subcategory selection
  // });
    function productValidation() {
      const productName = document.getElementById('name').value;
      const nameErr = document.getElementById('name-err');
      const description = document.getElementById('description').value;
      const descriptionErr = document.getElementById('description-err');
      const price = document.getElementById('price').value;
      const priceErr = document.getElementById('price-err');
      const category = document.getElementById('category').value;
      const categoryErr = document.getElementById('category-err');
      const stock = document.getElementById('stock').value;
      const stockErr = document.getElementById('stock-err');
      const image = document.getElementById('image').value;
      const imageErr = document.getElementById('image-err');

      let isValid = true;

      // Product Name Validation
      if (!productName) {
        nameErr.innerText = "Product name required";
        nameErr.style.display = 'block';
        isValid = false;
      } else {
        nameErr.style.display = 'none';
      }

      // Description Validation
      if (!description) {
        descriptionErr.innerText = "Description required";
        descriptionErr.style.display = 'block';
        isValid = false;
      } else {
        descriptionErr.style.display = 'none';
      }

      // Price Validation
      if (!price) {
        priceErr.innerText = 'Price required';
        priceErr.style.display = 'block';
        isValid = false;
      } else if (price > 1000000) {
        priceErr.innerText = 'Price cannot exceed 1000000';
        priceErr.style.display = 'block';
        isValid = false;
      } else {
        priceErr.style.display = 'none';
      }

      // Category Validation
      if (!category) {
        categoryErr.innerText = 'Select a category';
        categoryErr.style.display = 'block';
        isValid = false;
      } else {
        categoryErr.style.display = 'none';
      }

      // Stock Validation
      if (!stock) {
        stockErr.innerText = 'Stock required';
        stockErr.style.display = 'block';
        isValid = false;
      } else {
        stockErr.style.display = 'none';
      }

      // Image Validation
      if (!image) {
        imageErr.innerText = 'Product image required';
        imageErr.style.display = 'block';
        isValid = false;
      } else {
        imageErr.style.display = 'none';
      }

      return isValid;
    }
  </script>
</body>
</html>
